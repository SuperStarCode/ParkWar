package namvn.project2.parkwar.controller;

import namvn.project2.parkwar.model.TaiKhoan;
import namvn.project2.parkwar.repository.TaiKhoanRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;
import java.util.Optional;

@RestController    // This means that this class is a Controller
@RequestMapping(path = "/account") // This means URL's start with /demo (after Application path)
public class TaiKhoanController {
    // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    @Autowired
    private TaiKhoanRepository taiKhoanRepository;

    @PostMapping(path = "/register")
    public TaiKhoan createAccount(@Valid @RequestBody TaiKhoan taiKhoan) {
        return taiKhoanRepository.save(taiKhoan);
    }

    @DeleteMapping(path = "/delete/{id}")
    public Optional<TaiKhoan> findAllById(@PathVariable("id") long id) {

        Optional<TaiKhoan> taiKhoan = taiKhoanRepository.findById(id);
        return taiKhoan;
    }

    @GetMapping(path = "/login")
    public @ResponseBody
    String checkLogin(@RequestParam String name) {
        TaiKhoan tkTemp = taiKhoanRepository.findByTentk(name);
        if (tkTemp!=null)
            return "Success";
        else
            return "No success";
    }

    @GetMapping(path = "getAll")
//----------------------DELETE
    @RequestMapping(value = "/users/{id}", method = RequestMethod.DELETE)
    @ResponseStatus(HttpStatus.OK)
    TaiKhoan deleteUser(@PathVariable("id") long id) {
        Optional<TaiKhoan> user = taiKhoanRepository.findById(id);
        if (user != null)
            taiKhoanRepository.delete(user.get());
        return user.get();
    }

    @RequestMapping(value = "/user", method = RequestMethod.GET)
    Iterable<TaiKhoan> findAll() {

        return taiKhoanRepository.findAll();
    }

}
